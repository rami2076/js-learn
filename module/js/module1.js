//since ES2015 Module の利用動機
/*
    保守性・名前空間・再利用性のために使用される。
*/

//動機の詳細
{
    /*
    保守性：依存性の高いコードの集合を一か所にまとめそれ以外のモジュールへの依存性を減らす。
    名前空間：モジュールごとに分かれたスコープがあり、グローバルの名前空間を汚染しない。
    再利用性：便利な変数や関数を複数の場所にコピーアンドペーストせず、モジュールとして再利用できる。
    */
}


//1ファイル/1モジュール
{
    //一つのファイルは一つのモジュールに対応する。
}

//開放
{
    //モジュールは関数や変数を外部にエクスポートできる。
    //外部のモジュールで宣言された変数や関数をインポートできる。
}

//モジュールの別名
{
    //ECMAScriptモジュール
    //ESモジュール
    //JSモジュール
}

//ECMAScriptモジュールの構文
{
    //自身のモジュールをエクスポートする際は、export文

    //外部モジュールからインポートする際は、import文
}

//モジュールを認識させるためには？
{
    //htmlのscriptタグのtype属性をmoduleとすること。
}
